{"name": "Проверка что нажатие на логотип яндекса ведет на главную страниц яндекса", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[@aria-label='Логотип Дзен']\"}\n  (Session info: headless chrome=113.0.5672.92)\nStacktrace:\n0   chromedriver                        0x0000000102dc78ac chromedriver + 4257964\n1   chromedriver                        0x0000000102dbff40 chromedriver + 4226880\n2   chromedriver                        0x00000001029fc9d4 chromedriver + 281044\n3   chromedriver                        0x0000000102a37a34 chromedriver + 522804\n4   chromedriver                        0x0000000102a6e7e4 chromedriver + 747492\n5   chromedriver                        0x0000000102a2b98c chromedriver + 473484\n6   chromedriver                        0x0000000102a2c98c chromedriver + 477580\n7   chromedriver                        0x0000000102d86900 chromedriver + 3991808\n8   chromedriver                        0x0000000102d8a354 chromedriver + 4006740\n9   chromedriver                        0x0000000102d8a940 chromedriver + 4008256\n10  chromedriver                        0x0000000102d9033c chromedriver + 4031292\n11  chromedriver                        0x0000000102d8af34 chromedriver + 4009780\n12  chromedriver                        0x0000000102d63490 chromedriver + 3847312\n13  chromedriver                        0x0000000102da89f4 chromedriver + 4131316\n14  chromedriver                        0x0000000102da8b4c chromedriver + 4131660\n15  chromedriver                        0x0000000102db9230 chromedriver + 4198960\n16  libsystem_pthread.dylib             0x000000019bcaafd4 _pthread_start + 320\n17  libsystem_pthread.dylib             0x000000019bca5d3c thread_start + 8", "trace": "web_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2e368323d16832a666ec0e6ce24fd3c8\")>\n\n    @allure.title('Проверка что нажатие на логотип яндекса ведет на главную страниц яндекса')\n    @allure.description('Открываем страницу заказа, после чего нажимаем на логотип яндекса, '\n                        'и проверяем перешли ли на главную страницу яндекса')\n    def test_go_yandex(web_driver):\n        page = OrderPage(web_driver)\n        page.open()\n        page.go_yandex()\n        page.wait(1)\n>       page.check_is_yandex_page()\n\ntests/test_order_page.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/order_page.py:17: in check_is_yandex_page\n    assert self.find(self.YANDEX_PAGE_HEADER).is_displayed()\npages/base_page.py:30: in find\n    result = self.driver.find_element(by=descriptor[0], value=descriptor[1].format(**kwargs))\nvenv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x103f34460>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00019bcaafd4 _pthread_start + 320\\\\n17  libsystem_pthread.dylib             0x000000019bca5d3c thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[@aria-label='Логотип Дзен']\"}\nE         (Session info: headless chrome=113.0.5672.92)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000102dc78ac chromedriver + 4257964\nE       1   chromedriver                        0x0000000102dbff40 chromedriver + 4226880\nE       2   chromedriver                        0x00000001029fc9d4 chromedriver + 281044\nE       3   chromedriver                        0x0000000102a37a34 chromedriver + 522804\nE       4   chromedriver                        0x0000000102a6e7e4 chromedriver + 747492\nE       5   chromedriver                        0x0000000102a2b98c chromedriver + 473484\nE       6   chromedriver                        0x0000000102a2c98c chromedriver + 477580\nE       7   chromedriver                        0x0000000102d86900 chromedriver + 3991808\nE       8   chromedriver                        0x0000000102d8a354 chromedriver + 4006740\nE       9   chromedriver                        0x0000000102d8a940 chromedriver + 4008256\nE       10  chromedriver                        0x0000000102d9033c chromedriver + 4031292\nE       11  chromedriver                        0x0000000102d8af34 chromedriver + 4009780\nE       12  chromedriver                        0x0000000102d63490 chromedriver + 3847312\nE       13  chromedriver                        0x0000000102da89f4 chromedriver + 4131316\nE       14  chromedriver                        0x0000000102da8b4c chromedriver + 4131660\nE       15  chromedriver                        0x0000000102db9230 chromedriver + 4198960\nE       16  libsystem_pthread.dylib             0x000000019bcaafd4 _pthread_start + 320\nE       17  libsystem_pthread.dylib             0x000000019bca5d3c thread_start + 8\n\nvenv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException"}, "description": "Открываем страницу заказа, после чего нажимаем на логотип яндекса, и проверяем перешли ли на главную страницу яндекса", "steps": [{"name": "Открываем страницу https://qa-scooter.praktikum-services.ru/order", "status": "passed", "steps": [{"name": "Принимаем работу с COOKIES", "status": "passed", "start": 1683795398827, "stop": 1683795398874}], "start": 1683795397497, "stop": 1683795398874}, {"name": "Нажатие на логотип Яндекса", "status": "passed", "start": 1683795398874, "stop": 1683795398899}, {"name": "Запускаем ожидание на 1 секунд", "status": "passed", "parameters": [{"name": "seconds", "value": "1"}, {"name": "condition", "value": "<function BasePage.<lambda> at 0x103f28820>"}], "start": 1683795398899, "stop": 1683795399902}, {"name": "Проверяем является ли страница начальной страницей Яндекса", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[@aria-label='Логотип Дзен']\"}\n  (Session info: headless chrome=113.0.5672.92)\nStacktrace:\n0   chromedriver                        0x0000000102dc78ac chromedriver + 4257964\n1   chromedriver                        0x0000000102dbff40 chromedriver + 4226880\n2   chromedriver                        0x00000001029fc9d4 chromedriver + 281044\n3   chromedriver                        0x0000000102a37a34 chromedriver + 522804\n4   chromedriver                        0x0000000102a6e7e4 chromedriver + 747492\n5   chromedriver                        0x0000000102a2b98c chromedriver + 473484\n6   chromedriver                        0x0000000102a2c98c chromedriver + 477580\n7   chromedriver                        0x0000000102d86900 chromedriver + 3991808\n8   chromedriver                        0x0000000102d8a354 chromedriver + 4006740\n9   chromedriver                        0x0000000102d8a940 chromedriver + 4008256\n10  chromedriver                        0x0000000102d9033c chromedriver + 4031292\n11  chromedriver                        0x0000000102d8af34 chromedriver + 4009780\n12  chromedriver                        0x0000000102d63490 chromedriver + 3847312\n13  chromedriver                        0x0000000102da89f4 chromedriver + 4131316\n14  chromedriver                        0x0000000102da8b4c chromedriver + 4131660\n15  chromedriver                        0x0000000102db9230 chromedriver + 4198960\n16  libsystem_pthread.dylib             0x000000019bcaafd4 _pthread_start + 320\n17  libsystem_pthread.dylib             0x000000019bca5d3c thread_start + 8\n\n", "trace": "  File \"/Users/elenamaslennikova/HomeWork/Sprint_4/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/elenamaslennikova/HomeWork/Sprint_4/pages/order_page.py\", line 17, in check_is_yandex_page\n    assert self.find(self.YANDEX_PAGE_HEADER).is_displayed()\n  File \"/Users/elenamaslennikova/HomeWork/Sprint_4/pages/base_page.py\", line 30, in find\n    result = self.driver.find_element(by=descriptor[0], value=descriptor[1].format(**kwargs))\n  File \"/Users/elenamaslennikova/HomeWork/Sprint_4/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 831, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"/Users/elenamaslennikova/HomeWork/Sprint_4/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/elenamaslennikova/HomeWork/Sprint_4/venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Переключение вкладки браузера", "status": "passed", "start": 1683795399902, "stop": 1683795399913}], "start": 1683795399902, "stop": 1683795400483}], "start": 1683795397497, "stop": 1683795400539, "uuid": "21822629-758f-4de8-8451-5080d1ef7f73", "historyId": "6b4d2bb157cde12f78ae5d54ef2ed6c8", "testCaseId": "6b4d2bb157cde12f78ae5d54ef2ed6c8", "fullName": "tests.test_order_page#test_go_yandex", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "host", "value": "MacBook-Air-Elena.local"}, {"name": "thread", "value": "43447-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}